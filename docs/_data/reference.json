{
	"id": 0,
	"name": "@github/catalyst",
	"kind": 0,
	"flags": {},
	"originalName": "",
	"children": [
		{
			"id": 1,
			"name": "\"bind\"",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true
			},
			"originalName": "/home/runner/work/catalyst/catalyst/src/bind.ts",
			"children": [
				{
					"id": 2,
					"name": "Subscription",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"children": [
						{
							"id": 3,
							"name": "closed",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "bind.ts",
									"line": 47,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 4,
							"name": "unsubscribe",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"signatures": [
								{
									"id": 5,
									"name": "unsubscribe",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "bind.ts",
									"line": 48,
									"character": 13
								}
							]
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								3
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								4
							]
						}
					],
					"sources": [
						{
							"fileName": "bind.ts",
							"line": 46,
							"character": 22
						}
					]
				},
				{
					"id": 19,
					"name": "Binding",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {},
					"sources": [
						{
							"fileName": "bind.ts",
							"line": 74,
							"character": 12
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 20,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {},
							"children": [
								{
									"id": 23,
									"name": "method",
									"kind": 32,
									"kindString": "Variable",
									"flags": {},
									"sources": [
										{
											"fileName": "bind.ts",
											"line": 74,
											"character": 49
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 22,
									"name": "tag",
									"kind": 32,
									"kindString": "Variable",
									"flags": {},
									"sources": [
										{
											"fileName": "bind.ts",
											"line": 74,
											"character": 33
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 21,
									"name": "type",
									"kind": 32,
									"kindString": "Variable",
									"flags": {},
									"sources": [
										{
											"fileName": "bind.ts",
											"line": 74,
											"character": 20
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"groups": [
								{
									"title": "Variables",
									"kind": 32,
									"children": [
										23,
										22,
										21
									]
								}
							],
							"sources": [
								{
									"fileName": "bind.ts",
									"line": 74,
									"character": 14
								}
							]
						}
					}
				},
				{
					"id": 6,
					"name": "controllers",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isConst": true
					},
					"sources": [
						{
							"fileName": "bind.ts",
							"line": 1,
							"character": 17
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							}
						],
						"name": "Set"
					},
					"defaultValue": "new Set<string>()"
				},
				{
					"id": 7,
					"name": "bind",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 8,
							"name": "bind",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExported": true
							},
							"parameters": [
								{
									"id": 9,
									"name": "controller",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExported": true
									},
									"type": {
										"type": "reference",
										"name": "HTMLElement"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					],
					"sources": [
						{
							"fileName": "bind.ts",
							"line": 7,
							"character": 20
						}
					]
				},
				{
					"id": 27,
					"name": "bindActions",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"signatures": [
						{
							"id": 28,
							"name": "bindActions",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 29,
									"name": "el",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "Element"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					],
					"sources": [
						{
							"fileName": "bind.ts",
							"line": 86,
							"character": 20
						}
					]
				},
				{
					"id": 13,
					"name": "bindElements",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"signatures": [
						{
							"id": 14,
							"name": "bindElements",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 15,
									"name": "root",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "Element"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					],
					"sources": [
						{
							"fileName": "bind.ts",
							"line": 51,
							"character": 21
						}
					]
				},
				{
					"id": 24,
					"name": "bindings",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"signatures": [
						{
							"id": 25,
							"name": "bindings",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 26,
									"name": "el",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "Element"
									}
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"id": 19,
										"name": "Binding"
									}
								],
								"name": "Iterable"
							}
						}
					],
					"sources": [
						{
							"fileName": "bind.ts",
							"line": 75,
							"character": 18
						}
					]
				},
				{
					"id": 16,
					"name": "handleEvent",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"signatures": [
						{
							"id": 17,
							"name": "handleEvent",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 18,
									"name": "event",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "Event"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					],
					"sources": [
						{
							"fileName": "bind.ts",
							"line": 62,
							"character": 20
						}
					]
				},
				{
					"id": 10,
					"name": "listenForBind",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 11,
							"name": "listenForBind",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Set up observer that will make sure any actions that are dynamically\ninjected into `el` will be bound to it's controller.",
								"text": "This returns a Subscription object which you can call `unsubscribe()` on to\nstop further live updates.\n"
							},
							"parameters": [
								{
									"id": 12,
									"name": "el",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExported": true
									},
									"type": {
										"type": "reference",
										"name": "Node"
									},
									"defaultValue": "document"
								}
							],
							"type": {
								"type": "reference",
								"id": 2,
								"name": "Subscription"
							}
						}
					],
					"sources": [
						{
							"fileName": "bind.ts",
							"line": 19,
							"character": 29
						}
					]
				}
			],
			"groups": [
				{
					"title": "Interfaces",
					"kind": 256,
					"children": [
						2
					]
				},
				{
					"title": "Type aliases",
					"kind": 4194304,
					"children": [
						19
					]
				},
				{
					"title": "Variables",
					"kind": 32,
					"children": [
						6
					]
				},
				{
					"title": "Functions",
					"kind": 64,
					"children": [
						7,
						27,
						13,
						24,
						16,
						10
					]
				}
			],
			"sources": [
				{
					"fileName": "bind.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 50,
			"name": "\"controller\"",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true
			},
			"originalName": "/home/runner/work/catalyst/catalyst/src/controller.ts",
			"children": [
				{
					"id": 51,
					"name": "CustomElement",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"children": [
						{
							"id": 52,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {},
							"signatures": [
								{
									"id": 53,
									"name": "new CustomElement",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "HTMLElement"
									}
								}
							],
							"sources": [
								{
									"fileName": "controller.ts",
									"line": 5,
									"character": 25
								}
							]
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								52
							]
						}
					],
					"sources": [
						{
							"fileName": "controller.ts",
							"line": 5,
							"character": 23
						}
					]
				},
				{
					"id": 54,
					"name": "controller",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 55,
							"name": "controller",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Controller is a decorator to be used over a class that extends HTMLElement.\nIt will automatically `register()` the component in the customElement\nregistry, as well as ensuring `bind(this)` is called on `connectedCallback`,\nwrapping the classes `connectedCallback` method if needed."
							},
							"parameters": [
								{
									"id": 56,
									"name": "classObject",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExported": true
									},
									"type": {
										"type": "reference",
										"id": 31,
										"name": "CustomElement"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					],
					"sources": [
						{
							"fileName": "controller.ts",
							"line": 15,
							"character": 26
						}
					]
				}
			],
			"groups": [
				{
					"title": "Interfaces",
					"kind": 256,
					"children": [
						51
					]
				},
				{
					"title": "Functions",
					"kind": 64,
					"children": [
						54
					]
				}
			],
			"sources": [
				{
					"fileName": "controller.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 57,
			"name": "\"findtarget\"",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true
			},
			"originalName": "/home/runner/work/catalyst/catalyst/src/findtarget.ts",
			"children": [
				{
					"id": 58,
					"name": "findTarget",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 59,
							"name": "findTarget",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "findTarget will run `querySelectorAll` against the given controller,\nreturning any the first child that:",
								"text": " - Matches the selector of `[data-target~=\"tag.name\"]` where tag is the\n tagName of the given HTMLElement, and `name` is the given `name` argument.\n\n - Closest ascendant of the element, that matches the tagname of the\n controller, is the specific instance of the controller itself - in other\n words it is not nested in other controllers of the same type.\n\n"
							},
							"parameters": [
								{
									"id": 60,
									"name": "controller",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExported": true
									},
									"type": {
										"type": "reference",
										"name": "HTMLElement"
									}
								},
								{
									"id": 61,
									"name": "name",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExported": true
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"name": "Element"
									},
									{
										"type": "intrinsic",
										"name": "undefined"
									}
								]
							}
						}
					],
					"sources": [
						{
							"fileName": "findtarget.ts",
							"line": 13,
							"character": 26
						}
					]
				},
				{
					"id": 62,
					"name": "findTargets",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 63,
							"name": "findTargets",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExported": true
							},
							"parameters": [
								{
									"id": 64,
									"name": "controller",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExported": true
									},
									"type": {
										"type": "reference",
										"name": "HTMLElement"
									}
								},
								{
									"id": 65,
									"name": "name",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExported": true
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"name": "Element"
								}
							}
						}
					],
					"sources": [
						{
							"fileName": "findtarget.ts",
							"line": 20,
							"character": 27
						}
					]
				}
			],
			"groups": [
				{
					"title": "Functions",
					"kind": 64,
					"children": [
						58,
						62
					]
				}
			],
			"sources": [
				{
					"fileName": "findtarget.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 77,
			"name": "\"index\"",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true
			},
			"originalName": "/home/runner/work/catalyst/catalyst/src/index.ts",
			"sources": [
				{
					"fileName": "index.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 30,
			"name": "\"register\"",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true
			},
			"originalName": "/home/runner/work/catalyst/catalyst/src/register.ts",
			"children": [
				{
					"id": 31,
					"name": "CustomElement",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"children": [
						{
							"id": 32,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {},
							"signatures": [
								{
									"id": 33,
									"name": "new CustomElement",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "HTMLElement"
									}
								}
							],
							"sources": [
								{
									"fileName": "register.ts",
									"line": 1,
									"character": 25
								}
							]
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								32
							]
						}
					],
					"sources": [
						{
							"fileName": "register.ts",
							"line": 1,
							"character": 23
						}
					]
				},
				{
					"id": 34,
					"name": "register",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 35,
							"name": "register",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Register the controller as a custom element.",
								"text": "The classname is converted to a approriate tag name.\n\nExample: HelloController => hello-controller\n"
							},
							"parameters": [
								{
									"id": 36,
									"name": "classObject",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExported": true
									},
									"type": {
										"type": "reference",
										"id": 31,
										"name": "CustomElement"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					],
					"sources": [
						{
							"fileName": "register.ts",
							"line": 12,
							"character": 24
						}
					]
				}
			],
			"groups": [
				{
					"title": "Interfaces",
					"kind": 256,
					"children": [
						31
					]
				},
				{
					"title": "Functions",
					"kind": 64,
					"children": [
						34
					]
				}
			],
			"sources": [
				{
					"fileName": "register.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 66,
			"name": "\"target\"",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true
			},
			"originalName": "/home/runner/work/catalyst/catalyst/src/target.ts",
			"children": [
				{
					"id": 67,
					"name": "target",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 68,
							"name": "target",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Target is a decorator which - when assigned to a property field on the\nclass - will override that class field, turning it into a Getter which\nreturns a call to `findTarget(this, key)` where `key` is the name of the\nproperty field. In other words, `@target foo` becomes a getter for\n`findTarget(this, 'foo')`."
							},
							"typeParameter": [
								{
									"id": 69,
									"name": "K",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {
										"isExported": true
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"parameters": [
								{
									"id": 70,
									"name": "proto",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExported": true
									},
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "typeParameter",
												"name": "K",
												"constraint": {
													"type": "intrinsic",
													"name": "string"
												}
											},
											{
												"type": "intrinsic",
												"name": "unknown"
											}
										],
										"name": "Record"
									}
								},
								{
									"id": 71,
									"name": "key",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExported": true
									},
									"type": {
										"type": "typeParameter",
										"name": "K",
										"constraint": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					],
					"sources": [
						{
							"fileName": "target.ts",
							"line": 10,
							"character": 22
						}
					]
				},
				{
					"id": 72,
					"name": "targets",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 73,
							"name": "targets",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Targets is a decorator which - when assigned to a property field on the\nclass - will override that class field, turning it into a Getter which\nreturns a call to `findTargets(this, key)` where `key` is the name of the\nproperty field. In other words, `@targets foo` becomes a getter for\n`findTargets(this, 'foo')`."
							},
							"typeParameter": [
								{
									"id": 74,
									"name": "K",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {
										"isExported": true
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"parameters": [
								{
									"id": 75,
									"name": "proto",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExported": true
									},
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "typeParameter",
												"name": "K",
												"constraint": {
													"type": "intrinsic",
													"name": "string"
												}
											},
											{
												"type": "intrinsic",
												"name": "unknown"
											}
										],
										"name": "Record"
									}
								},
								{
									"id": 76,
									"name": "key",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExported": true
									},
									"type": {
										"type": "typeParameter",
										"name": "K",
										"constraint": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					],
					"sources": [
						{
							"fileName": "target.ts",
							"line": 26,
							"character": 23
						}
					]
				}
			],
			"groups": [
				{
					"title": "Functions",
					"kind": 64,
					"children": [
						67,
						72
					]
				}
			],
			"sources": [
				{
					"fileName": "target.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 37,
			"name": "\"wrap\"",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true
			},
			"originalName": "/home/runner/work/catalyst/catalyst/src/wrap.ts",
			"children": [
				{
					"id": 38,
					"name": "wrap",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 39,
							"name": "wrap",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "A utility method which wraps a method on an object. If the method doesn't\nalready exist on the object, it is simply assigned. If it does exist then\nboth the new function and the existing function will be called with the same\narguments.",
								"text": "Used in the `controller()` decorator.\n"
							},
							"typeParameter": [
								{
									"id": 40,
									"name": "K",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {
										"isExported": true
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"parameters": [
								{
									"id": 41,
									"name": "obj",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExported": true
									},
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "typeParameter",
												"name": "K",
												"constraint": {
													"type": "intrinsic",
													"name": "string"
												}
											},
											{
												"type": "reflection",
												"declaration": {
													"id": 42,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {
														"isExported": true
													},
													"signatures": [
														{
															"id": 43,
															"name": "__call",
															"kind": 4096,
															"kindString": "Call signature",
															"flags": {
																"isExported": true
															},
															"parameters": [
																{
																	"id": 44,
																	"name": "args",
																	"kind": 32768,
																	"kindString": "Parameter",
																	"flags": {
																		"isExported": true,
																		"isRest": true
																	},
																	"type": {
																		"type": "array",
																		"elementType": {
																			"type": "intrinsic",
																			"name": "unknown"
																		}
																	}
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "void"
															}
														}
													],
													"sources": [
														{
															"fileName": "wrap.ts",
															"line": 10,
															"character": 16
														}
													]
												}
											}
										],
										"name": "Record"
									}
								},
								{
									"id": 45,
									"name": "name",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExported": true
									},
									"type": {
										"type": "typeParameter",
										"name": "K",
										"constraint": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								},
								{
									"id": 46,
									"name": "fn",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExported": true
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 47,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {
												"isExported": true
											},
											"signatures": [
												{
													"id": 48,
													"name": "__call",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {
														"isExported": true
													},
													"parameters": [
														{
															"id": 49,
															"name": "args",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {
																"isExported": true,
																"isRest": true
															},
															"type": {
																"type": "array",
																"elementType": {
																	"type": "intrinsic",
																	"name": "unknown"
																}
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "unknown"
													}
												}
											],
											"sources": [
												{
													"fileName": "wrap.ts",
													"line": 12,
													"character": 5
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					],
					"sources": [
						{
							"fileName": "wrap.ts",
							"line": 9,
							"character": 20
						}
					]
				}
			],
			"groups": [
				{
					"title": "Functions",
					"kind": 64,
					"children": [
						38
					]
				}
			],
			"sources": [
				{
					"fileName": "wrap.ts",
					"line": 1,
					"character": 0
				}
			]
		}
	],
	"groups": [
		{
			"title": "External modules",
			"kind": 1,
			"children": [
				1,
				50,
				57,
				77,
				30,
				66,
				37
			]
		}
	]
}